position := mutable Vector2D(100, 100)
playerSize := 20
playerSpeed := 400.0
hammerSize := 10
hammerSpeed := 1024.0
hoverTime := 2.0
hoverTicker := mutable 0.0
hammerRestingPosition := Vector2D(-15, -15)
hammerPosition := mutable hammerRestingPosition
characterDirection := mutable 0

update_player := Function[Nil] () {
    deltaTime := 1.0/60.0
	# wasd movement controls
    if (input.hold(w))
    {
        position.y -= playerSpeed * deltaTime
        characterDirection = 90
    }
    if (input.hold(s))
    {
        position.y += playerSpeed * deltaTime
        characterDirection = 180
    }
    if (input.hold(a))
    {
        position.x -= playerSpeed * deltaTime
        characterDirection = 270
    }
    if (input.hold(d))
    {
        position.x += playerSpeed * deltaTime
        characterDirection = 360
    }
    position = bind_on_screen(position, playerSize)

    # arrow hammer controls
    isHammerControlled := mutable false

    if (input.hold(up))
    {
        hammerPosition.y -= hammerSpeed * deltaTime
        isHammerControlled = true
    }
    if (input.hold(down))
    {
        hammerPosition.y += hammerSpeed * deltaTime
        isHammerControlled = true
    }
    if (input.hold(left))
    {
        hammerPosition.x -= hammerSpeed * deltaTime
        isHammerControlled = true
    }
    if (input.hold(right))
    {
        hammerPosition.x += hammerSpeed * deltaTime
        isHammerControlled = true
    }
	
    if (isHammerControlled) 
    {
    	hoverTicker = 0.0
    }
    else
   	{
   		hoverTicker += deltaTime
   		if (hoverTicker > hoverTime)
   		{
   			hammerPosition = move_to_point(hammerPosition, hammerRestingPosition, hammerSpeed * deltaTime)
   		}
   	}
}

load_player := Function[Nil] () {
    position = (graphics.get_resolution() / 2).to_vector2d()
}

draw_player := Function[Nil] () {
	graphics.box_centered( Transform2D( position, 0, playerSize * 2), Color(H2e2e2e))
    graphics.box_centered( Transform2D( position + hammerPosition, 0, 10), colors.yellow)
}