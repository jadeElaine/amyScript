mutable Dictionary objectManager {
	instances: mutable Dictionary {},
	nextInstanceId: mutable Integer(0)
};

Function update_instance( mutable Dictionary instance )
{
	if( !instance.t )
	{
		Real step = get_delta_time() * 35.0;
		if( instance.o.magnitude() > step )
		{
			instance.o -= instance.o.normalized() * step;
		}
		else
		{
			instance.o = math.v3zero;
		}
	}
	
	instance.r.pitch( instance.o.x * get_delta_time() );
	instance.r.yaw( instance.o.y * get_delta_time() );
	instance.r.roll( instance.o.z * get_delta_time() );
	
	instance.d += instance.v * get_delta_time();
};

Function create_instance( String prototype_, Dictionary config_, Vector3D d_, Quaternion r_ )
{
    mutable Dictionary result {
        id: Integer(objectManager.nextInstanceId),
        prototype: prototype_,
		config: config_,
        d: mutable Vector3D( d_ ),
        r: mutable Quaternion( r_ ),
		v: mutable Vector3D(0,0,0),
		o: mutable Vector3D(0,0,0),
		f: mutable Boolean(false),
		t: mutable Boolean(false) };
    objectManager.instances.insert(result, objectManager.nextInstanceId);
    objectManager.nextInstanceId += 1;
    return result.id;
};
